name: Build and Release

on:
  push:
    #branches: [ "main" ]
    tags:
      - 'v*' # For releases
  #workflow_dispatch:

env:
  SOLUTION_FILE_PATH: CRT.sln
  BUILD_PLATFORM: x64
  BUILD_CONFIGURATION: Release

  permissions: write-all

#permissions:
#  contents: write  # Required for creating releases
#  actions: write    # Optional for general action permissions
#  pull-requests: write
#  repository-projects: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore NuGet packages
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

      - name: Restore vcpkg packages
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: vcpkg integrate install

      - name: Build
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} ${{ env.SOLUTION_FILE_PATH }}

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-binaries
          path: |
            ${{ github.workspace }}/x64/${{ env.BUILD_CONFIGURATION }}/*
          retention-days: 5

  release:
    name: Create Release
    needs: build
    runs-on: windows-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-binaries
          path: ./binaries/build-binaries.zip # Path to the binaries directory

      - name: Display structure of downloaded files
        run: ls -R ./binaries



      - name: Debug Info
        run: |
          echo "Actor: ${{ github.actor }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "ref_name: ${{ github.ref_name }}"


      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      - name: Debug upload_url
        run: echo "aaaaaaaaaa ${{ steps.create_release.outputs.upload_url }}"


      - name: Zip before upload release asset
        uses: TheDoctor0/zip-release@0.7.6
        with:
          type: 'zip'
          filename: 'build-binaries2.zip'
          path: '.\binaries\build-binaries'



      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\binaries\build-binaries2.zip
          asset_name: build-binaries2.zip
          asset_content_type: application/zip
